@using UsersDiosna.Report.Models
@model ReportFormModel

<script>

    var windowHeight;

    function windowWidth() {
        return $(window).width();
    }

    function windowHeight() {
        //return window.innerHeight;
        return $(window).height() - 130;
    }

    // add Event onResize and define method
    if (window.attachEvent) {
        window.attachEvent('onresize', function () {
            alert('attachEvent - resize');
        });
    }
    else if (window.addEventListener) {
        window.addEventListener('resize', function () {
            var id;
            $(window).resize(function () {
                clearTimeout(id);
                id = setTimeout(RecalcCount(25), 500);
            });
        }, true);
    }
    else {
        //The browser does not support Javascript event binding
    }

    // disable or enable input
    function InputEnable(el_s,el_d) {        
        if ($(el_s).prop('checked') == true) {            
            $(el_d).prop("disabled", false);
        }
        else {
            $(el_d).prop("disabled", true);
            $(el_d).prop("value", 0);
        }
    }

    function InitReportFilter() {
        $("tol1").prop("disabled", true);
        $("tol2").prop("disabled", true);
        $("tol3").prop("disabled", true);
        $("tol4").prop("disabled", true);        
    }

    function RecalcCount(rowHeight) {
        var count;
        count = Math.round((windowHeight() - $('.navbar').height() - $('#top_menu').height() - $('.message').height() - $('footer').height()-25) / rowHeight);
        console.log(count);

        //$("#count").attr('value', count);
        //return count;
    }
    
</script>

<div onload="InitReportFilter()"> <!-- pozdeji onclick tlacitka v menu -->    
    <section id="reportForm">
        @using (Html.BeginForm("Form", "Report", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Get, new { role = "form" }))
        {
            <div>
                @Html.HiddenFor(model => model.StartId, new { @id = "start_id", @value = 0} )
                @Html.HiddenFor(model => model.Count, new { @id = "count", @value = 60} )

                <!-- time from -->
                <div class="form-item">
                   <!-- <label for="time_from">Time from:</label>                        
                    <input id="time_from" class="date-time-in" type="datetime" value="01.01.2017__00:00" /> -->
                    @Html.LabelFor(model => model.DateFrom)
                    @Html.TextBoxFor(model => model.DateFrom, new { @id = "date_from", @class = "date-in", @type = "date", @name = "date_from", @value=DateTime.Now })                                        
                    @Html.TextBoxFor(model => model.TimeFrom, new { @id = "time_from", @class = "time-in", @type = "time", @name = "time_from", @value = DateTime.Now })                    
                </div>
                <!-- time to -->
                <div class="form-item">          
                    <!-- <label for="time_to">Time to:</label>
                    <input id="time_to" class="date-time-in" type="datetime" value="01.01.2017__00:00" /> -->
                    @Html.LabelFor(model => model.DateTo)
                    @Html.TextBoxFor(model => model.DateTo, new { @id = "date_to", @class = "date-in", @name = "date_to", @type = "date" })                                        
                    @Html.TextBoxFor(model => model.TimeTo, new { @id = "time_to", @class = "time-in", @name = "time_to", @type = "time" })                   
                </div>
                <!-- rcp -->
                <div class="form-item">
                    <!-- <label for="rcp">Rcp:</label> -->
                    @Html.LabelFor(model => model.Recipe)
                    @Html.TextBoxFor(model => model.Recipe, new { @id = "recipe", @class = "rcp-in", @type = "number", @name = "recipe", @value = "0", @min = 0, @max = 30, @style = "width:50px;" })
                    <!-- <input id="rcp" value="0" type=number  style="width:50px;"/> -->
                </div>
                <!-- over Rcp limits -->
                <div class="form-item">                        
                    <div class="checkbox">
                        @Html.CheckBoxFor(model => model.Par0Sel)
                        @Html.LabelFor(model => model.Par0Sel)
                    </div>
                </div>
                <!-- amount -->
                <div class="form-item">
                    <div>
                        @Html.CheckBoxFor(model => model.Par1Sel, new { @type = "checkbox", @onchange = "InputEnable(this, tol1)" })
                        @Html.LabelFor(model => model.Par1Sel)
                    </div>
                    <div>
                        <label for="tol1">&plusmn</label>
                        <input id="tol1" class="tol-set" value="0" name="tol1"  type=number min=0 max=100 step="0.1" /><span style="margin-left:5px;">kg</span>
                    </div>

                </div>
                <!-- temperature -->
                <div class="form-item">
                    <div>
                        @Html.CheckBoxFor(model => model.Par2Sel, new { @type = "checkbox", @onchange = "InputEnable(this, tol2)" })
                        @Html.LabelFor(model => model.Par2Sel)                        
                    </div>
                    <div>
                        <label for="tol2">&plusmn</label>
                        <input id="tol2" class="tol-set" value="0" name="tol2" type=number min=0 max=10 step="0.1" /><span style="margin-left:5px;">°C</span>
                    </div>
                </div>
                <!-- step time -->
                <div class="form-item">
                    <div>
                        @Html.CheckBoxFor(model => model.Par3Sel, new { @type = "checkbox", @onchange = "InputEnable(this, tol3)" })
                        @Html.LabelFor(model => model.Par3Sel)                        
                    </div>
                    <div>
                        <label for="tol3">&plusmn</label>
                        <input id="tol3" class="tol-set" value="0" name="tol3" type=number min=0 max=60 step="0.1" /><span style="margin-left:5px;">min</span>
                    </div>
                </div>
                <!-- interstep time -->
                <div class="form-item">
                    <div>
                        @Html.CheckBoxFor(model => model.Par4Sel, new { @type = "checkbox", @onchange = "InputEnable(this, tol4)" })
                        @Html.LabelFor(model => model.Par4Sel)                        
                    </div>                    
                    <div>
                        <label for="tol4">&plusmn</label>
                        <input id="tol4" class="tol-set" value="0" name="tol4" type=number min=0 max=60 step="0.1"/><span style="margin-left:5px;">min</span>
                    </div>
                </div>
            </div>
            <input class="btn btn-default" style="display: block; float: right; margin-left: 15px; padding: 2px 2px 2px 2px;" type="submit" value="Submit" />
        }
</section>
</div>